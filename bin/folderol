#!/usr/bin/perl

# ----------------------------------------------------------------------
# Copyright (C) 2013 Darren Chamberlain <darren@cpan.org>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; version 2.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02111-1301 USA
# ----------------------------------------------------------------------

use strict;
use warnings;
use vars qw($ME);
use vars qw($opt_V $opt_h $opt_f $opt_g);

use File::Basename qw(basename);
use Folderol;
use Getopt::Std qw(getopts);
use YAML qw(LoadFile);

$ME = basename($0);

# ----------------------------------------------------------------------
# Options:
# -h Help
# -V Version
# -f Fetch only
# -g Generate only
# ----------------------------------------------------------------------
getopts('fghV');

# ----------------------------------------------------------------------
# Print help message and exit, if -h, or version and exit, if -V
# ----------------------------------------------------------------------
if ($opt_h) {
    print Folderol->help_message($ME);
    exit 0;
}

if ($opt_V) {
    print "$ME v", $Folderol::VERSION, "\n";
    exit 0;
}

# ----------------------------------------------------------------------
# The main event
# ----------------------------------------------------------------------
for my $conf (@ARGV) {
    my @sites = LoadFile($conf);

    for my $site (@sites) {
        my $folderol = Folderol->new($site);
        Folderol::Logger->info("Loading " . $folderol->name);

        if ($opt_g) {
            Folderol::Logger->info("Skipping feed fetching");
        }
        else {
            Folderol::Logger->debug("Starting feed fetching");
            for my $feed ($folderol->feeds) {
                $feed->fetch($folderol->cache_dir) and
                    $folderol->parse($feed);
            }
        }

        if ($opt_f) {
            Folderol::Logger->info("Skipping page generation");
        }
        else {
            Folderol::Logger->debug("Starting page generation");
            for my $dest ($folderol->destinations) {
                $folderol->process($dest);
            }

            for my $static ($folderol->static_files) {
                $folderol->copy_static($static)
            }
        }

        Folderol::Logger->info("Completed " . $folderol->name);
    }
}

exit;
